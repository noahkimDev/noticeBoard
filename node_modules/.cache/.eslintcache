[{"/home/noah/바탕화면/noticeBoard/noticeboard/src/index.js":"1","/home/noah/바탕화면/noticeBoard/noticeboard/src/App.js":"2","/home/noah/바탕화면/noticeBoard/noticeboard/src/reportWebVitals.js":"3","/home/noah/바탕화면/noticeBoard/noticeboard/src/home/home.js":"4","/home/noah/바탕화면/noticeBoard/noticeboard/src/login/login.js":"5","/home/noah/바탕화면/noticeBoard/noticeboard/src/signup/signup.js":"6","/home/noah/바탕화면/noticeBoard/noticeboard/src/writethenew/writethenew.js":"7","/home/noah/바탕화면/nb/noticeboard/src/index.js":"8","/home/noah/바탕화면/nb/noticeboard/src/reportWebVitals.js":"9","/home/noah/바탕화면/nb/noticeboard/src/App.js":"10","/home/noah/바탕화면/nb/noticeboard/src/home/home.js":"11","/home/noah/바탕화면/nb/noticeboard/src/signup/signup.js":"12","/home/noah/바탕화면/nb/noticeboard/src/login/login.js":"13","/home/noah/바탕화면/nb/noticeboard/src/writethenew/writethenew.js":"14","/home/noah/바탕화면/nb/noticeboard/src/readTxt/readTxt.js":"15"},{"size":628,"mtime":1690194067503,"results":"16","hashOfConfig":"17"},{"size":649,"mtime":1690263800792,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1690190932676,"results":"19","hashOfConfig":"17"},{"size":1979,"mtime":1690349092699,"results":"20","hashOfConfig":"17"},{"size":1318,"mtime":1690284384404,"results":"21","hashOfConfig":"17"},{"size":2026,"mtime":1690282307629,"results":"22","hashOfConfig":"17"},{"size":948,"mtime":1690268596139,"results":"23","hashOfConfig":"17"},{"size":628,"mtime":1690941624266,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1690534422684,"results":"26","hashOfConfig":"25"},{"size":772,"mtime":1691238086641,"results":"27","hashOfConfig":"25"},{"size":7353,"mtime":1691563757530,"results":"28","hashOfConfig":"25"},{"size":4452,"mtime":1691551541423,"results":"29","hashOfConfig":"25"},{"size":1863,"mtime":1691576560851,"results":"30","hashOfConfig":"25"},{"size":1893,"mtime":1691146240009,"results":"31","hashOfConfig":"25"},{"size":3646,"mtime":1691492290354,"results":"32","hashOfConfig":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ikfh22",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i4udoe",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"/home/noah/바탕화면/noticeBoard/noticeboard/src/index.js",[],[],[],"/home/noah/바탕화면/noticeBoard/noticeboard/src/App.js",[],[],"/home/noah/바탕화면/noticeBoard/noticeboard/src/reportWebVitals.js",[],[],"/home/noah/바탕화면/noticeBoard/noticeboard/src/home/home.js",[],[],"/home/noah/바탕화면/noticeBoard/noticeboard/src/login/login.js",[],[],"/home/noah/바탕화면/noticeBoard/noticeboard/src/signup/signup.js",[],[],"/home/noah/바탕화면/noticeBoard/noticeboard/src/writethenew/writethenew.js",[],[],"/home/noah/바탕화면/nb/noticeboard/src/index.js",[],[],"/home/noah/바탕화면/nb/noticeboard/src/reportWebVitals.js",[],[],[],"/home/noah/바탕화면/nb/noticeboard/src/App.js",[],["83"],"/home/noah/바탕화면/nb/noticeboard/src/home/home.js",["84","85","86"],[],"import \"./home.css\";\n\nimport { Pagination } from \"react-bootstrap\";\nimport Table from \"react-bootstrap/Table\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Home() {\n  const navigate = useNavigate();\n\n  const [searchTxt, setSearchTxt] = useState(\"\");\n  const [list, setList] = useState(\"\");\n  const [backupList, setBackupList] = useState(\"\");\n  const [num, setNum] = useState(0);\n  const [rememberPage, setRememberPage] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000\")\n      .then(async (data) => {\n        console.log(data.data);\n        // let wow = data.data.sort(function (a, b) {\n        //   return b.id - a.id;\n        // });\n        // console.log(\"wow\", wow);\n        await setList(data.data);\n        await setBackupList(data.data);\n      })\n      .catch((err) => console.log(err));\n    console.log(\"홈 시작\");\n  }, []);\n\n  function rendering(array, num) {\n    if (!Array.isArray(array) || array.length == 0) {\n      return null;\n    }\n    let usingArr = [...array];\n    // console.log(num);\n    // console.log(usingArr);\n    return usingArr.slice(6 * num, 6 * (num + 1)).map((e, i) => (\n      <tr key={i}>\n        <td\n          onClick={async function () {\n            await navigate(`/readTxt/${e.id}`);\n          }}\n        >\n          {e.title}\n        </td>\n        <td>{e.createdAt.slice(0, 10)}</td>\n        <td>{e.author}</td>\n      </tr>\n    ));\n  }\n\n  function search(txt) {\n    axios\n      .get(`http://localhost:8000/search/${txt}`) //\n      .then(async (data) => {\n        await setList(data.data);\n      }) //\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function signUpForm() {\n    navigate(`/signup`);\n  }\n  function logInForm() {\n    navigate(\"/login\");\n  }\n  function writeTheNewForm() {\n    navigate(\"/writethenew\");\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">My Board</h1>\n      <div className=\"homeTable\">\n        <div className=\"uppersideBtns\">\n          <Button\n            type=\"submit\"\n            onClick={writeTheNewForm}\n            variant=\"outline-secondary\"\n            className=\"btn1\"\n          >\n            New\n          </Button>\n          <div>\n            <Button\n              type=\"submit\"\n              variant=\"outline-secondary\"\n              className=\"btn2\"\n              onClick={signUpForm}\n            >\n              Sign-up\n            </Button>{\" \"}\n            <Button\n              type=\"submit\"\n              variant=\"outline-secondary\"\n              onClick={logInForm}\n              className=\"btn2\"\n            >\n              Log-in\n            </Button>\n          </div>\n        </div>\n\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th className=\"col-md-8\">Title</th>\n              <th>Date</th>\n              <th>Nickname</th>\n            </tr>\n          </thead>\n          <tbody>{rendering(list, num)}</tbody>\n        </Table>\n        <Pagination className=\"paging\">\n          <Pagination.First\n            onClick={function () {\n              if (list.length) {\n                setNum(0);\n              }\n            }}\n          />\n          <Pagination.Prev\n            onClick={function (e) {\n              if (list.length) {\n                if (rememberPage === 1) {\n                  setNum(0);\n                } else {\n                  setNum(rememberPage - 2);\n                  setRememberPage(rememberPage - 1);\n                }\n              }\n            }}\n          />\n          {/* Math.floor가 아니라 무조건 올림으로 해야함*/}\n          {/* 6개 단위로 페이지를 끊을 때, 페이지 갯수가 7개를 넘어갔을 때 바로 페이지가 생기게 하려면 */}\n          {/* 무조건 올림으로 해야함 */}\n          {Array.isArray(list)\n            ? list.slice(0, Math.ceil(list.length / 6)).map((e, i) => {\n                if (i < 5) {\n                  return (\n                    <Pagination.Item\n                      key={i}\n                      onClick={function (e) {\n                        setNum(i);\n                        if (parseInt(e.target.textContent)) {\n                          setRememberPage(parseInt(e.target.textContent));\n                        }\n                      }}\n                    >\n                      {i + 1}\n                    </Pagination.Item>\n                  );\n                } else if (i === Math.ceil(list.length / 6) - 1) {\n                  return (\n                    <Pagination key={`ellipsis-and-last-${i}`}>\n                      <Pagination.Ellipsis />\n                      <Pagination.Item\n                        key={`last-item-${i}`}\n                        onClick={function (e) {\n                          setNum(i);\n                          if (parseInt(e.target.textContent)) {\n                            setRememberPage(parseInt(e.target.textContent));\n                          }\n                        }}\n                      >\n                        {i + 1}\n                      </Pagination.Item>\n                    </Pagination>\n                  );\n                }\n              })\n            : null}\n          <Pagination.Next\n            onClick={async function (e) {\n              if (list.length) {\n                if (rememberPage === Math.ceil(list.length / 6) - 1) {\n                  // console.log(\"here\", num, rememberPage);\n                  await setNum(rememberPage);\n                  await setRememberPage(rememberPage + 1);\n                } else if (rememberPage < Math.ceil(list.length / 6) - 1) {\n                  await setNum(rememberPage);\n                  await setRememberPage(rememberPage + 1);\n                  // console.log(num, rememberPage);\n                }\n              }\n            }}\n          />\n          <Pagination.Last\n            onClick={function () {\n              if (list.length) {\n                setNum(Math.ceil(list.length / 6) - 1);\n              }\n            }}\n          />\n        </Pagination>\n        {rememberPage ? (\n          <Badge bg=\"light\" text=\"dark\">\n            {rememberPage} / {Math.ceil(list.length / 6)} page\n          </Badge>\n        ) : null}\n\n        <div className=\"searchTitle\">\n          <InputGroup className=\"mb-3 \">\n            <Form.Control\n              placeholder=\"Search title\"\n              aria-label=\"Search title\"\n              aria-describedby=\"basic-addon2\"\n              onChange={async function (e) {\n                await setSearchTxt(e.target.value);\n              }}\n            />\n            <Button\n              variant=\"outline-secondary\"\n              id=\"button-addon2\"\n              onClick={async function () {\n                if (searchTxt) {\n                  // console.log(\"something\", searchTxt);\n                  await search(searchTxt);\n                } else {\n                  // console.log(\"nothing\", backupList);\n                  await setList(backupList);\n                }\n              }}\n            >\n              Search\n            </Button>\n          </InputGroup>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","/home/noah/바탕화면/nb/noticeboard/src/signup/signup.js",[],[],"/home/noah/바탕화면/nb/noticeboard/src/login/login.js",[],[],"/home/noah/바탕화면/nb/noticeboard/src/writethenew/writethenew.js",[],[],[],"/home/noah/바탕화면/nb/noticeboard/src/readTxt/readTxt.js",["87"],[],"import \"./readTxt.css\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nfunction ReadTxt() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [chosenData, setChosenData] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(true);\n  const [titleEditing, setTitleEditing] = useState(\"\");\n  const [contentEditing, setContentEditing] = useState(\"\");\n\n  async function deleteData() {\n    if (window.confirm(\"do you really want to delete this content?\")) {\n      await axios\n        .delete(`http://localhost:8000/delete/${id}`)\n        .then((data) => {\n          console.log(data);\n          alert(\"completed delete\");\n          navigate(\"/\");\n        }) //\n        .catch((err) => console.log(err));\n    }\n  }\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8000/readTxt/${id}`) //\n      .then((data) => {\n        // console.log(data.data);\n        setChosenData(data.data);\n      }) //\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">Text</h1>\n      <div className=\"container\">\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>제목</Form.Label>\n            <Form.Control\n              type=\"title\"\n              placeholder=\"\"\n              disabled={isEditing}\n              value={(!titleEditing ? chosenData.title : titleEditing) || \"\"}\n              onChange={async function (e) {\n                await setTitleEditing(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>내용</Form.Label>\n            <Form.Control\n              disabled={isEditing}\n              as=\"textarea\"\n              rows={10}\n              value={\n                (!contentEditing ? chosenData.content : contentEditing) || \"\"\n              }\n              onChange={async function (e) {\n                await setContentEditing(e.target.value);\n              }}\n            />\n          </Form.Group>\n        </Form>\n        {isEditing ? (\n          <Button\n            variant=\"outline-dark\"\n            onClick={async function () {\n              await setIsEditing(false);\n            }}\n            className=\"btn1\"\n          >\n            Edit\n          </Button>\n        ) : (\n          <Button\n            variant=\"outline-dark\"\n            onClick={async function () {\n              await setIsEditing(true);\n              // 공백이 넘어감\n              // 아무것도 작성하지 않아도 기존에 있던 값을 보내야함\n\n              await axios\n                .put(`http://localhost:8000/edit/${id}`, {\n                  newTitle: !titleEditing ? chosenData.title : titleEditing,\n                  newContent: !contentEditing\n                    ? chosenData.content\n                    : contentEditing,\n                }) //\n                .then((data) => console.log(data))\n                .catch((err) => console.log(err));\n            }}\n            className=\"btn1\"\n          >\n            save\n          </Button>\n        )}\n        <Button variant=\"outline-dark\" className=\"btn1\" onClick={deleteData}>\n          Delete\n        </Button>\n        <Link to=\"/\">\n          <Button variant=\"outline-dark\" className=\"btn1\">\n            Home\n          </Button>\n        </Link>\n      </div>\n    </>\n  );\n}\n\nexport default ReadTxt;\n",{"ruleId":"88","severity":1,"message":"89","line":3,"column":25,"nodeType":"90","messageId":"91","endLine":3,"endColumn":31,"suppressions":"92"},{"ruleId":"88","severity":1,"message":"93","line":9,"column":23,"nodeType":"90","messageId":"91","endLine":9,"endColumn":27},{"ruleId":"94","severity":1,"message":"95","line":39,"column":47,"nodeType":"96","messageId":"97","endLine":39,"endColumn":49},{"ruleId":"98","severity":1,"message":"99","line":148,"column":68,"nodeType":"100","messageId":"101","endLine":148,"endColumn":70},{"ruleId":"102","severity":1,"message":"103","line":38,"column":6,"nodeType":"104","endLine":38,"endColumn":8,"suggestions":"105"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar",["106"],"'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["107"],{"kind":"108","justification":"109"},{"desc":"110","fix":"111"},"directive","","Update the dependencies array to be: [id]",{"range":"112","text":"113"},[1192,1194],"[id]"]