[{"/home/noah/바탕화면/noticeBoard/noticeboard/src/index.js":"1","/home/noah/바탕화면/noticeBoard/noticeboard/src/App.js":"2","/home/noah/바탕화면/noticeBoard/noticeboard/src/reportWebVitals.js":"3","/home/noah/바탕화면/noticeBoard/noticeboard/src/home/home.js":"4","/home/noah/바탕화면/noticeBoard/noticeboard/src/login/login.js":"5","/home/noah/바탕화면/noticeBoard/noticeboard/src/signup/signup.js":"6","/home/noah/바탕화면/noticeBoard/noticeboard/src/writethenew/writethenew.js":"7","/home/noah/바탕화면/nb/noticeboard/src/index.js":"8","/home/noah/바탕화면/nb/noticeboard/src/reportWebVitals.js":"9","/home/noah/바탕화면/nb/noticeboard/src/App.js":"10","/home/noah/바탕화면/nb/noticeboard/src/home/home.js":"11","/home/noah/바탕화면/nb/noticeboard/src/signup/signup.js":"12","/home/noah/바탕화면/nb/noticeboard/src/login/login.js":"13","/home/noah/바탕화면/nb/noticeboard/src/writethenew/writethenew.js":"14","/home/noah/바탕화면/nb/noticeboard/src/readTxt/readTxt.js":"15"},{"size":628,"mtime":1690194067503,"results":"16","hashOfConfig":"17"},{"size":649,"mtime":1690263800792,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1690190932676,"results":"19","hashOfConfig":"17"},{"size":1979,"mtime":1690349092699,"results":"20","hashOfConfig":"17"},{"size":1318,"mtime":1690284384404,"results":"21","hashOfConfig":"17"},{"size":2026,"mtime":1690282307629,"results":"22","hashOfConfig":"17"},{"size":948,"mtime":1690268596139,"results":"23","hashOfConfig":"17"},{"size":628,"mtime":1690941624266,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1690534422684,"results":"26","hashOfConfig":"25"},{"size":772,"mtime":1691238086641,"results":"27","hashOfConfig":"25"},{"size":8359,"mtime":1692448637266,"results":"28","hashOfConfig":"25"},{"size":4502,"mtime":1691757826383,"results":"29","hashOfConfig":"25"},{"size":6789,"mtime":1692442483976,"results":"30","hashOfConfig":"25"},{"size":2177,"mtime":1692112322302,"results":"31","hashOfConfig":"25"},{"size":4369,"mtime":1692184326445,"results":"32","hashOfConfig":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ikfh22",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1i4udoe",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"/home/noah/바탕화면/noticeBoard/noticeboard/src/index.js",[],[],[],"/home/noah/바탕화면/noticeBoard/noticeboard/src/App.js",[],[],"/home/noah/바탕화면/noticeBoard/noticeboard/src/reportWebVitals.js",[],[],"/home/noah/바탕화면/noticeBoard/noticeboard/src/home/home.js",[],[],"/home/noah/바탕화면/noticeBoard/noticeboard/src/login/login.js",[],[],"/home/noah/바탕화면/noticeBoard/noticeboard/src/signup/signup.js",[],[],"/home/noah/바탕화면/noticeBoard/noticeboard/src/writethenew/writethenew.js",[],[],"/home/noah/바탕화면/nb/noticeboard/src/index.js",[],[],[],"/home/noah/바탕화면/nb/noticeboard/src/reportWebVitals.js",[],[],"/home/noah/바탕화면/nb/noticeboard/src/App.js",[],["82"],"/home/noah/바탕화면/nb/noticeboard/src/home/home.js",["83","84","85"],[],"/home/noah/바탕화면/nb/noticeboard/src/signup/signup.js",[],[],"/home/noah/바탕화면/nb/noticeboard/src/login/login.js",[],[],"/home/noah/바탕화면/nb/noticeboard/src/writethenew/writethenew.js",["86"],[],"import \"./writethenew.css\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Cookies from \"js-cookie\";\n\nfunction Writethenew() {\n  const navigate = useNavigate();\n\n  let [title, setTitle] = useState(\"\");\n  let [write, setWrite] = useState(\"\");\n  // 쿠키사용할 때\n  const cookieInfo = Cookies.get(\"email\");\n  function writeTheNewSubmit() {\n    // console.log(\"쿠키쿠키\", cookieInfo);\n    axios\n      .post(\n        \"http://localhost:8000/writethenew\",\n        {\n          title: title,\n          write: write,\n          // authorEmail: cookieInfo, // 쿠키용\n        },\n        {\n          withCredentials: true,\n        }\n      ) //\n      .then((data) => {\n        console.log(\"작성된 글 저장완료\", data);\n        navigate(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  return (\n    <>\n      <h1 className=\"title\">Text</h1>\n      <div className=\"container\">\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>제목</Form.Label>\n            <Form.Control\n              type=\"title\"\n              placeholder=\"\"\n              onChange={function (e) {\n                setTitle(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>내용</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={10}\n              onChange={function (e) {\n                setWrite(e.target.value);\n              }}\n            />\n          </Form.Group>\n        </Form>\n        <Button\n          onClick={writeTheNewSubmit}\n          variant=\"outline-dark\"\n          className=\"btn1\"\n        >\n          Submit\n        </Button>\n        <Link to=\"/\">\n          <Button variant=\"outline-dark\" className=\"btn2\">\n            Back\n          </Button>\n        </Link>\n      </div>\n    </>\n  );\n}\n\nexport default Writethenew;\n","/home/noah/바탕화면/nb/noticeboard/src/readTxt/readTxt.js",["87"],[],"import \"./readTxt.css\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nfunction ReadTxt() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [chosenData, setChosenData] = useState(\"\");\n  const [sameUser, setSameUser] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(true);\n  const [titleEditing, setTitleEditing] = useState(\"\");\n  const [contentEditing, setContentEditing] = useState(\"\");\n\n  async function deleteData() {\n    if (window.confirm(\"do you really want to delete this content?\")) {\n      await axios\n        .delete(`http://localhost:8000/delete/${id}`, {\n          withCredentials: true,\n        })\n        .then((data) => {\n          console.log(data);\n          alert(\"completed delete\");\n          navigate(\"/\");\n        }) //\n        .catch((err) => console.log(err));\n    }\n  }\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8000/readTxt/${id}`, {\n        withCredentials: true,\n      }) //\n      .then(async (data) => {\n        console.log(\"왜또\", data.data);\n        await setChosenData(data.data.chosenData);\n        await setSameUser(data.data.sameUser);\n      }) //\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">Text</h1>\n      <div className=\"container\">\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>제목</Form.Label>\n            <Form.Control\n              type=\"title\"\n              placeholder=\"\"\n              disabled={isEditing}\n              value={(!titleEditing ? chosenData.title : titleEditing) || \"\"}\n              onChange={async function (e) {\n                await setTitleEditing(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>내용</Form.Label>\n            <Form.Control\n              disabled={isEditing}\n              as=\"textarea\"\n              rows={10}\n              value={\n                (!contentEditing ? chosenData.content : contentEditing) || \"\"\n              }\n              onChange={async function (e) {\n                await setContentEditing(e.target.value);\n              }}\n            />\n          </Form.Group>\n        </Form>\n        {sameUser ? (\n          <>\n            {isEditing ? (\n              <Button\n                variant=\"outline-dark\"\n                onClick={async function () {\n                  await setIsEditing(false);\n                }}\n                className=\"btn1\"\n              >\n                Edit\n              </Button>\n            ) : (\n              <Button\n                variant=\"outline-dark\"\n                onClick={async function () {\n                  await setIsEditing(true);\n                  // 공백이 넘어감\n                  // 아무것도 작성하지 않아도 기존에 있던 값을 보내야함\n\n                  await axios\n                    .put(\n                      `http://localhost:8000/edit/${id}`,\n                      {\n                        newTitle: !titleEditing\n                          ? chosenData.title\n                          : titleEditing,\n                        newContent: !contentEditing\n                          ? chosenData.content\n                          : contentEditing,\n                      },\n                      {\n                        withCredentials: true,\n                      }\n                    ) //\n                    .then((data) => console.log(data))\n                    .catch((err) => console.log(err));\n                }}\n                className=\"btn1\"\n              >\n                save\n              </Button>\n            )}\n            <Button\n              variant=\"outline-dark\"\n              className=\"btn1\"\n              onClick={deleteData}\n            >\n              Delete\n            </Button>\n          </>\n        ) : (\n          <></>\n        )}\n\n        <Link to=\"/\">\n          <Button variant=\"outline-dark\" className=\"btn1\">\n            Home\n          </Button>\n        </Link>\n      </div>\n    </>\n  );\n}\n\nexport default ReadTxt;\n",{"ruleId":"88","severity":1,"message":"89","line":3,"column":25,"nodeType":"90","messageId":"91","endLine":3,"endColumn":31,"suppressions":"92"},{"ruleId":"88","severity":1,"message":"93","line":9,"column":23,"nodeType":"90","messageId":"91","endLine":9,"endColumn":27},{"ruleId":"94","severity":1,"message":"95","line":51,"column":47,"nodeType":"96","messageId":"97","endLine":51,"endColumn":49},{"ruleId":"98","severity":1,"message":"99","line":179,"column":68,"nodeType":"100","messageId":"101","endLine":179,"endColumn":70},{"ruleId":"88","severity":1,"message":"102","line":17,"column":9,"nodeType":"90","messageId":"91","endLine":17,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":44,"column":6,"nodeType":"105","endLine":44,"endColumn":8,"suggestions":"106"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar",["107"],"'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'cookieInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["108"],{"kind":"109","justification":"110"},{"desc":"111","fix":"112"},"directive","","Update the dependencies array to be: [id]",{"range":"113","text":"114"},[1401,1403],"[id]"]